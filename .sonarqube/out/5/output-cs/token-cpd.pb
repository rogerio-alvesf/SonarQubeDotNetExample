ü
LC:\Projects\SonarQubeDotNetExample\Film.Infra\Repositories\FilmRepository.cs
	namespace 	
Film
 
. 
Infra 
. 
Repositories !
{ 
public 

class 
FilmRepository 
{		 
private

 
readonly

 
Context

  
_context

! )
;

) *
public 
FilmRepository 
( 
Context %
context& -
)- .
=>/ 1
_context2 :
=; <
context= D
;D E
public 
async 
Task 
Add 
( 
FilmDto %
film& *
)* +
{ 	
_context 
. 
Films 
. 
Add 
( 
film #
)# $
;$ %
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
} 	
public 
async 
Task 
< 
FilmDto !
>! "
GetById# *
(* +
Guid+ /
id0 2
)2 3
{ 	
return 
_context 
. 
Films !
.! "
Find" &
(& '
id' )
)) *
;* +
} 	
public 
async 
Task 
Delete  
(  !
Guid! %
id& (
)( )
{ 	
var 
book 
= 
_context 
.  
Films  %
.% &
Find& *
(* +
id+ -
)- .
;. /
_context 
. 
Films 
. 
Remove !
(! "
book" &
)& '
;' (
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
} 	
public   
async   
Task   
Update    
(    !
FilmDto  ! (
film  ) -
)  - .
{!! 	
_context"" 
."" 
Update"" 
("" 
film""  
)""  !
;""! "
await## 
_context## 
.## 
SaveChangesAsync## +
(##+ ,
)##, -
;##- .
}$$ 	
}%% 
}&& À
[C:\Projects\SonarQubeDotNetExample\Film.Infra\Migrations\20240612001355_InitialMigration.cs
	namespace 	
Film
 
. 
Infra 
. 

Migrations 
{ 
public 

partial 
class 
InitialMigration )
:* +
	Migration, 5
{ 
[		 	#
ExcludeFromCodeCoverage			  
]		  !
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 D
,D E
nullableF N
:N O
falseP U
)U V
,V W
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
nullableG O
:O P
trueQ U
)U V
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% /
,/ 0
x1 2
=>3 5
x6 7
.7 8
Id8 :
): ;
;; <
} 
) 
; 
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str 
) 
; 
} 	
} 
} £
=C:\Projects\SonarQubeDotNetExample\Film.Infra\Data\Context.cs
	namespace 	
Film
 
. 
Infra 
. 
Data 
{ 
[ #
ExcludeFromCodeCoverage 
] 
public 

class 
Context 
: 
	DbContext $
{		 
public

 
DbSet

 
<

 
FilmDto

 
>

 
Films

 #
{

$ %
get

& )
;

) *
set

+ .
;

. /
}

0 1
public 
Context 
( 
[ 
NotNull 
]  
DbContextOptions! 1
<1 2
Context2 9
>9 :
options; B
)B C
:D E
baseF J
(J K
optionsK R
)R S
{ 	
} 	
} 
} 